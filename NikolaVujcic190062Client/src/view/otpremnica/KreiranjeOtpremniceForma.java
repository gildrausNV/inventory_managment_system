/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.otpremnica;

import communication.Request;
import controller.ControllerClient;
import domain.FizickoLice;
import domain.Klijent;
import domain.Otpremnica;
import domain.PravnoLice;
import domain.Roba;
import domain.StavkeOtpremnice;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import operations.Operations;
import view.components.ModelTabeleStavke;

/**
 *
 * @author milos
 */
public class KreiranjeOtpremniceForma extends javax.swing.JDialog {

    /**
     * Creates new form KreiranjeOtpremniceForma
     */
    public KreiranjeOtpremniceForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        srediFormu();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbKlijent = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbRoba = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbJedinica = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        txtKolicina = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnKreirajOtpremnicu = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtOdrediste = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Klijent:");

        cmbKlijent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Roba:");

        cmbRoba.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Jedinica mere:");

        cmbJedinica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Kolicina:");

        btnDodaj.setText("Dodaj stavku otpremnice");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        btnKreirajOtpremnicu.setText("Kreiraj otpremnicu");
        btnKreirajOtpremnicu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajOtpremnicuActionPerformed(evt);
            }
        });

        jButton3.setText("Izbrisi stavku");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Odrediste:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbRoba, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbJedinica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(btnDodaj)
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel5)
                        .addGap(24, 24, 24)
                        .addComponent(txtOdrediste, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(cmbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(btnKreirajOtpremnicu, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbRoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbJedinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtOdrediste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(btnKreirajOtpremnicu))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajOtpremnicuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajOtpremnicuActionPerformed
        try {
            if(txtOdrediste.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Unesite odrediste");
            }
            else{
                ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
                Otpremnica o = new Otpremnica();
                Object obj = cmbKlijent.getSelectedItem();
                Klijent k = null;
                if(obj instanceof FizickoLice) {
                    FizickoLice f = (FizickoLice) obj;
                    k = f.getKlijent();
                }
                else{
                    PravnoLice p = (PravnoLice) obj;
                    k = p.getKlijent();
                }
                o.setKlijent(k);
                o.setOdrediste(txtOdrediste.getText());
                o.setStavke(mts.getLista());
                ControllerClient.getInstance().createOtpremnica(o);
                JOptionPane.showMessageDialog(this, "Otpremnica je kreirana");
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska pri cuvanju otpremnice");
            //Logger.getLogger(KreiranjeOtpremniceForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKreirajOtpremnicuActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        if(txtKolicina.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Unesite kolicinu");
        }
        else if(!provera()){
            JOptionPane.showMessageDialog(this, "Greska pri unosu podataka");
        }
        else{
            StavkeOtpremnice so = new StavkeOtpremnice();
            so.setRoba((Roba) cmbRoba.getSelectedItem());
            so.setKolicina(Integer.parseInt(txtKolicina.getText()));
            so.setJedinicaMere((String) cmbJedinica.getSelectedItem());
            ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
            mts.dodaj(so);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int selectedRow = tblStavke.getSelectedRow();
        if(selectedRow!=-1){
            ModelTabeleStavke mts = (ModelTabeleStavke) tblStavke.getModel();
            mts.izbrisi(selectedRow);
        }
        else{
            JOptionPane.showMessageDialog(this, "Izaberite stavku");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnKreirajOtpremnicu;
    private javax.swing.JComboBox cmbJedinica;
    private javax.swing.JComboBox cmbKlijent;
    private javax.swing.JComboBox cmbRoba;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtOdrediste;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            ModelTabeleStavke mts = new ModelTabeleStavke();
            tblStavke.setModel(mts);
            cmbKlijent.removeAllItems();
            ArrayList<FizickoLice> listaF = ControllerClient.getInstance().getFizickaLica();
            ArrayList<PravnoLice> listaP = ControllerClient.getInstance().getPravnaLica();
            for (PravnoLice pl : listaP) {
                cmbKlijent.addItem(pl);
            }
            for (FizickoLice fl : listaF) {
                cmbKlijent.addItem(fl);
            }
            cmbRoba.removeAllItems();
            ArrayList<Roba> listaR = ControllerClient.getInstance().getRoba();
            for (Roba r : listaR) {
                cmbRoba.addItem(r);
            }
            cmbJedinica.removeAllItems();
            cmbJedinica.addItem("kom");
            cmbJedinica.addItem("kg");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska pri ucitavanju podataka");
            this.dispose();
            //Logger.getLogger(KreiranjeOtpremniceForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        private boolean provera() {
        char[] kol = txtKolicina.getText().toCharArray();
        for (char c : kol) {
            if(Character.isLetter(c)) return false;
        }
        return true;
    }
}
